{
  "category": "backend",
  "title": "Firebase Integration",
  "description": "Best practices for Firebase integration including Authentication, Firestore, Storage, and Functions",
  "recommended_globs": ["**/*.{js,jsx,ts,tsx}", "**/firebase/**/*"],
  "content": [
    "# Firebase Integration Rule",
    "",
    "// Description: Best practices for Firebase integration including Authentication, Firestore, Storage, and Functions",
    "// Recommended Globs: **/*.{js,jsx,ts,tsx}, **/firebase/**/*",
    "",
    "## Code Style and Structure",
    "- Use Firebase for Authentication, Firestore, Realtime Database, Storage, Hosting, and Cloud Functions",
    "- Keep Firebase configuration and initialization in a dedicated module",
    "- Use modular Firebase SDK imports to optimize bundle size",
    "- Avoid using Firebase directly in components; extract logic into reusable hooks or services",
    "",
    "## Authentication",
    "- Use Firebase Authentication for user management",
    "- Implement sign-in methods: Email/Password, Google, and other OAuth providers as needed",
    "- Use `onAuthStateChanged` to manage authentication state efficiently",
    "- Store authentication state in React context or Zustand for global access",
    "- Implement secure authentication flows with Firebase security rules",
    "",
    "## Firestore",
    "- Use Firestore for scalable, real-time data storage",
    "- Structure Firestore collections and documents efficiently",
    "- Use Firestore's indexing and query constraints for optimal performance",
    "- Implement Firestore security rules to protect sensitive data",
    "- Cache Firestore responses using local state or Zustand for improved performance",
    "",
    "## Storage",
    "- Use Firebase Storage for handling user-generated content",
    "- Implement secure file uploads with proper validation",
    "- Use Storage security rules to restrict access based on user roles",
    "- Optimize images and videos before uploading to reduce storage costs",
    "- Generate signed URLs for controlled file access when necessary"
  ]
}
